{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["hues","Object","shades","colorToHueShadeMap","buildColorToHueShadeMap","hue","shadeIndex","shade","color","colors","PrimaryColorPicker","props","classes","React","hueShade","hueFromColor","selectedHue","setSelectedHue","shadeFromColor","selectedShadeIndex","setSelectedShadeIndex","className","sliderContainer","id","value","min","max","step","onChange","aria-labelledby","swatch","backgroundColor","placement","title","key","checked","data-testid","e","icon","style","checkedIcon","fontSize","PropTypes","isRequired","withStyles","theme","radio","padding","radioIcon","width","height","radioIconSelectedWhite","display","justifyContent","alignItems","radioIconSelectedBlack","marginTop","marginBottom","slider","marginLeft","marginRight","useStyles","makeStyles","flexGrow","appBarSpacer","mixins","toolbar","content","overflow","container","paddingTop","spacing","paddingBottom","App","useState","primaryColor","setPrimaryColor","customTheme","createMuiTheme","palette","primary","main","ThemeProvider","AppBar","position","Toolbar","Typography","component","variant","noWrap","Container","maxWidth","defaultColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8040c27.chunk.js","sourcesContent":["import * as colors from '@material-ui/core/colors'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst defaultColor = '#2196f3'\r\nconst hues = Object.keys(colors).slice(1, 17) // missing: \"brown\", \"grey\", \"blueGrey\"\r\nconst shades = [\r\n  900,\r\n  800,\r\n  700,\r\n  600,\r\n  500,\r\n  400,\r\n  300,\r\n  200,\r\n  100,\r\n  50,\r\n  'A700',\r\n  'A400',\r\n  'A200',\r\n  'A100',\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  radio: {\r\n    padding: 0,\r\n  },\r\n  radioIcon: {\r\n    width: 48,\r\n    height: 48,\r\n  },\r\n  radioIconSelectedWhite: {\r\n    width: 48,\r\n    height: 48,\r\n    color: theme.palette.common.white,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  radioIconSelectedBlack: {\r\n    width: 48,\r\n    height: 48,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  swatch: {\r\n    width: 192,\r\n  },\r\n  sliderContainer: {\r\n    width: 192,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  slider: {\r\n    width: 'calc(100% - 40px)',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n})\r\n\r\n// map of color to hue, shade\r\nlet colorToHueShadeMap = null\r\nconst buildColorToHueShadeMap = () => {\r\n  if (!colorToHueShadeMap) {\r\n    colorToHueShadeMap = {}\r\n    for (let hue of hues) {\r\n      let shadeIndex = 0\r\n      for (let shade of shades) {\r\n        const color = colors[hue][shade]\r\n        colorToHueShadeMap[color] = { hue, shadeIndex }\r\n        shadeIndex++\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction hueFromColor(color) {\r\n  buildColorToHueShadeMap()\r\n  const hueShade = colorToHueShadeMap[color]\r\n  return hueShade ? hueShade.hue : 'blue'\r\n}\r\nfunction shadeFromColor(color) {\r\n  buildColorToHueShadeMap()\r\n  const hueShade = colorToHueShadeMap[color]\r\n  return hueShade ? hueShade.shadeIndex : 5\r\n}\r\n\r\nfunction PrimaryColorPicker(props) {\r\n  const { classes } = props\r\n  const [selectedHue, setSelectedHue] = React.useState(\r\n    hueFromColor(props.defaultColor ? props.defaultColor : defaultColor)\r\n  )\r\n  const [selectedShadeIndex, setSelectedShadeIndex] = React.useState(\r\n    shadeFromColor(props.defaultColor ? props.defaultColor : defaultColor)\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.sliderContainer}>\r\n        <Typography id={'ShadeSliderLabel'}>Shade:</Typography>\r\n        <Slider\r\n          className={classes.slider}\r\n          value={selectedShadeIndex}\r\n          min={0}\r\n          max={13}\r\n          step={1}\r\n          onChange={(e, shadeIndex) => {\r\n            props.onChange(colors[selectedHue][shades[shadeIndex]])\r\n            setSelectedShadeIndex(shadeIndex)\r\n          }}\r\n          aria-labelledby={'ShadeSliderLabel'}\r\n        />\r\n      </div>\r\n      <div className={classes.swatch}>\r\n        {hues.map((hue) => {\r\n          const backgroundColor = colors[hue][shades[selectedShadeIndex]]\r\n          return (\r\n            <Tooltip placement=\"right\" title={hue} key={hue}>\r\n              <Radio\r\n                className={classes.radio}\r\n                color=\"default\"\r\n                checked={\r\n                  colors[selectedHue][shades[selectedShadeIndex]] ===\r\n                  backgroundColor\r\n                }\r\n                data-testid={hue}\r\n                onChange={(e) => {\r\n                  props.onChange(\r\n                    colors[e.target.value][shades[selectedShadeIndex]]\r\n                  )\r\n                  setSelectedHue(e.target.value)\r\n                }}\r\n                value={hue}\r\n                aria-labelledby={`tooltip-${hue}`}\r\n                icon={\r\n                  <div\r\n                    className={classes.radioIcon}\r\n                    style={{ backgroundColor }}\r\n                  />\r\n                }\r\n                checkedIcon={\r\n                  <div\r\n                    className={\r\n                      (selectedShadeIndex >= 6 && selectedShadeIndex <= 9) ||\r\n                      selectedShadeIndex === 13\r\n                        ? classes.radioIconSelectedBlack\r\n                        : classes.radioIconSelectedWhite\r\n                    }\r\n                    style={{ backgroundColor }}\r\n                  >\r\n                    <CheckIcon style={{ fontSize: 30 }} />\r\n                  </div>\r\n                }\r\n              />\r\n            </Tooltip>\r\n          )\r\n        })}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nPrimaryColorPicker.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(PrimaryColorPicker)\r\n","import React from 'react'\r\nimport PrimaryColorPicker from 'mui-primary-color-picker'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Container from '@material-ui/core/Container'\r\nimport {\r\n  createMuiTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from '@material-ui/core/styles'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}))\r\n\r\nexport default function App() {\r\n  const classes = useStyles()\r\n  const [primaryColor, setPrimaryColor] = React.useState('#2196f3')\r\n  const customTheme = createMuiTheme({\r\n    palette: {\r\n      primary: { main: primaryColor },\r\n    },\r\n  })\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n      <div className=\"App\">\r\n        <AppBar position=\"absolute\">\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              mui-primary-color-picker\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <PrimaryColorPicker\r\n              defaultColor={primaryColor}\r\n              onChange={(color) => setPrimaryColor(color)}\r\n            />\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}